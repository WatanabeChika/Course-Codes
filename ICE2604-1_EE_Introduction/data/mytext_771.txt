polynomial_approximation_schemeIn computer science (particularly algorithmics), a polynomial-time approximation scheme (PTAS) is a type of approximation algorithm for optimization problems (most often, NP-hard optimization problems).A PTAS is an algorithm which takes an instance of an optimization problem and a parameter  and produces a solution that is within a factor  of being optimal (or  for maximization problems). For example, for the Euclidean traveling salesman problem, a PTAS would produce a tour with length at most , with  being the length of the shortest tour.[1]The running time of a PTAS is required to be polynomial in the problem size for every fixed ε, but can be different for different ε. Thus an algorithm running in time  or even  counts as a PTAS.A practical problem with PTAS algorithms is that the exponent of the polynomial could increase dramatically as ε shrinks, for example if the runtime is . One way of addressing this is to define the efficient polynomial-time approximation scheme or EPTAS, in which the running time is required to be  for a constant  independent of . This ensures that an increase in problem size has the same relative effect on runtime regardless of what ε is being used; however, the constant under the big-O can still depend on ε arbitrarily. Even more restrictive, and useful in practice, is the fully polynomial-time approximation scheme or FPTAS, which requires the algorithm to be polynomial in both the problem size  and . Unless P = NP, it holds that .[2] Consequently, under this assumption, APX-hard problems do not have PTASs.Another deterministic variant of the PTAS is the quasi-polynomial-time approximation scheme or QPTAS. A QPTAS has time complexity  for each fixed .Some problems which do not have a PTAS may admit a randomized algorithm with similar properties, a polynomial-time randomized approximation scheme or PRAS.  A PRAS is an algorithm which takes an instance of an optimization or counting problem and a parameter  and, in polynomial time, produces a solution that has a high probability of being within a factor  of optimal.  Conventionally, "high probability" means probability greater than 3/4, though as with most probabilistic complexity classes the definition is robust to variations in this exact value (the bare minimum requirement is generally greater than 1/2).  Like a PTAS, a PRAS must have running time polynomial in , but not necessarily in ; with further restrictions on the running time in , one can define an efficient polynomial-time randomized approximation scheme or EPRAS similar to the EPTAS, and a fully polynomial-time randomized approximation scheme or FPRAS similar to the FPTAS.[3]The term PTAS may also be used to refer to the class of optimization problems that have a PTAS.  PTAS is a subset of APX, and unless P = NP, it is a strict subset. [2]Membership in PTAS can be shown using a PTAS reduction, L-reduction, or P-reduction, all of which preserve PTAS membership, and these may also be used to demonstrate PTAS-completeness.  On the other hand, showing non-membership in PTAS (namely, the nonexistence of a PTAS), may be done by showing that the problem is APX-hard, after which the existence of a PTAS would show P = NP.  APX-hardness is commonly shown via PTAS reduction or AP-reduction.There exists PTAS for the class of all dense constraint satisfaction problems (CSPs).[4][]Complexity Zoo: PTAS, EPTAS.Pierluigi Crescenzi, Viggo Kann, Magnús Halldórsson, Marek Karpinski, and Gerhard Woeginger, A compendium of NP optimization problems – list which NP optimization problems have PTAS.