Deutsch-Jozsa_algorithmThe Deutsch–Jozsa algorithm is a deterministic quantum algorithm proposed by David Deutsch and Richard Jozsa in 1992 with improvements by Richard Cleve, Artur Ekert, Chiara Macchiavello, and Michele Mosca in 1998.[1][2] Although of little current practical use, it is one of the first examples of a quantum algorithm that is exponentially faster than any possible deterministic classical algorithm.[3]The Deutsch–Jozsa problem is specifically designed to be easy for a quantum algorithm and hard for any deterministic classical algorithm. It is a black box problem that can be solved efficiently by a quantum computer with no error, whereas a deterministic classical computer would need a exponential number of queries to the black box to solve the problem. More formally, it yields an oracle relative to which EQP, the class of problems that can be solved exactly in polynomial time on a quantum computer, and P are different.[4]Since the problem is easy to solve on a probabilistic classical computer, it does not yield an oracle separation with BPP, the class of problems that can be solved with bounded error in polynomial time on a probabilistic classical computer. Simon's problem is an example of a problem that yields an oracle separation between BQP and BPP.In the Deutsch–Jozsa problem, we are given a black box quantum computer known as an oracle that implements some function: The function takes n-bit binary values as input and produces either a 0 or a 1 as output for each such value. We are promised that the function is either constant (0 on all inputs or 1 on all inputs) or balanced (1 for exactly half of the input domain and 0 for the other half).[1] The task then is to determine if  is constant or balanced by using the oracle.For a conventional deterministic algorithm where  is the number of bits,  evaluations of  will be required in the worst case. To prove that  is constant, just over half the set of inputs must be evaluated and their outputs found to be identical (because the function is guaranteed to be either balanced or constant, not somewhere in between). The best case occurs where the function is balanced and the first two output values are different. For a conventional randomized algorithm, a constant  evaluations of the function suffices to produce the correct answer with a high probability (failing with probability  with ). However,  evaluations are still required if we want an answer that has no possibility of error. The Deutsch-Jozsa quantum algorithm produces an answer that is always correct with a single evaluation of .The Deutsch–Jozsa algorithm generalizes earlier (1985) work by David Deutsch, which provided a solution for the simple case where . Specifically, given a boolean function whose input is 1 bit, , is it constant?[5]The algorithm as Deutsch had originally proposed it was not, in fact, deterministic. The algorithm was successful with a probability of one half. In 1992, Deutsch and Jozsa produced a deterministic algorithm which was generalized to a function which takes  bits for its input. Unlike Deutsch's algorithm, this algorithm required two function evaluations instead of only one.Further improvements to the Deutsch–Jozsa algorithm were made by Cleve et al.,[2] resulting in an algorithm that is both deterministic and requires only a single query of . This algorithm is still referred to as Deutsch–Jozsa algorithm in honour of the groundbreaking techniques they employed.[2]For the Deutsch–Jozsa algorithm to work, the oracle computing  from  must be a quantum oracle which does not decohere . It also must not make a copy of , because that would violate the no cloning theorem.The algorithm begins with the  bit state . That is, the first n bits are each in the state  and the final bit is . A Hadamard transform is applied to each bit to obtain the state.We have the function  implemented as a quantum oracle. The oracle maps the state  to , where  denotes addition modulo 2. Applying the quantum oracle gives;.For each  is either 0 or 1. Testing these two possibilities, we see the above state is equal to.At this point the last qubit  may be ignored and the following remains:.Next, we will apply the Hadamard transform( is the sum of the bitwise product, where  is addition modulo 2) over the first register to obtainFrom this, we can see that the probability for a state  to be measured isThe probability of measuring , corresponding to , iswhich evaluates to 1 if  is constant (constructive interference) and 0 if  is balanced (destructive interference). In other words, the final measurement will be  (all zeros) if and only if  is constant and will yield some other state if  is balanced.Deutsch's algorithm is a special case of the general Deutsch–Jozsa algorithm where n = 1 in . We need to check the condition . It is equivalent to check  (where  is addition modulo 2, which can also be viewed as a quantum XOR gate implemented as a Controlled NOT gate), if zero, then  is constant, otherwise  is not constant.We begin with the two-qubit state  and apply a Hadamard transform to each qubit. This yieldsWe are given a quantum implementation of the function  that maps  to . Applying this function to our current state we obtainWe ignore the last bit and the global phase and therefore have the stateApplying a Hadamard transform to this state we have if and only if we measure  and  if and only if we measure . So with certainty we know whether  is constant or balanced.Bernstein–Vazirani algorithmDeutsch's lecture about the Deutsch-Jozsa algorithm