Gray_codeLucal code[1][2]54321Gray code43210123456789101112131415The reflected binary code (RBC), also known as reflected binary (RB) or Gray code after Frank Gray, is an ordering of the binary numeral system such that two successive values differ in only one bit (binary digit).For example, the representation of the decimal value "1" in binary would normally be "" and "2" would be "". In Gray code, these values are represented as "" and "". That way, incrementing a value from 1 to 2 requires only one bit to change, instead of two.Gray codes are widely used to prevent spurious output from electromechanical switches and to facilitate error correction in digital communications such as digital terrestrial television and some cable TV systems.Many devices indicate position by closing and opening switches. If that device uses natural binary codes, positions 3 and 4 are next to each other but all three bits of the binary representation differ:DecimalBinary......34......The problem with natural binary codes is that physical switches are not ideal: it is very unlikely that physical switches will change states exactly in synchrony. In the transition between the two states shown above, all three switches change state. In the brief period while all are changing, the switches will read some spurious position. Even without keybounce, the transition might look like  —  —  — . When the switches appear to be in position , the observer cannot tell if that is the "real" position 1, or a transitional state between two other positions. If the output feeds into a sequential system, possibly via combinational logic, then the sequential system may store a false value.This problem can be solved by changing only one switch at a time, so there is never any ambiguity of position, resulting in codes assigning to each of a contiguous set of integers, or to each member of a circular list, a word of symbols such that no two code words are identical and each two adjacent code words differ by exactly one symbol. These codes are also known as unit-distance,[3][4][5][6][7] single-distance, single-step, monostrophic[8][9][6][7] or syncopic codes,[8] in reference to the Hamming distance of 1 between adjacent codes.In principle, there can be more than one such code for a given word length, but the term Gray code was first applied to a particular binary code for non-negative integers, the binary-reflected Gray code, or BRGC. Bell Labs researcher George R. Stibitz described such a code in a 1941 patent application, granted in 1943.[10][11][12] Frank Gray introduced the term reflected binary code in his 1947 patent application, remarking that the code had "as yet no recognized name".[13] He derived the name from the fact that it "may be built up from the conventional binary code by a sort of reflection process".In the standard encoding the least significant bit follows a repetitive pattern of 2 on, 2 off  … ); the next digit a pattern of 4 on, 4 off; the nth least significant bit a pattern of 2n on 2n off. The four-bit version of this is shown below:DecimalBinaryGrayDecimalof Gray00112332465765748129131015111412101311149158For decimal 15 the code rolls over to decimal 0 with only one switch change. This is called the cyclic or adjacency property of the code.[14]In modern digital communications, Gray codes play an important role in error correction. For example, in a digital modulation scheme such as QAM where data is typically transmitted in symbols of 4 bits or more, the signal's constellation diagram is arranged so that the bit patterns conveyed by adjacent constellation points differ by only one bit. By combining this with forward error correction capable of correcting single-bit errors, it is possible for a receiver to correct any transmission errors that cause a constellation point to deviate into the area of an adjacent point. This makes the transmission system less susceptible to noise.Despite the fact that Stibitz described this code[10][11][12] before Gray, the reflected binary code was later named after Gray by others who used it. Two different 1953 patent applications use "Gray code" as an alternative name for the "reflected binary code";[15][16] one of those also lists "minimum error code" and "cyclic permutation code" among the names.[16] A 1954 patent application refers to "the Bell Telephone Gray code".[17] Other names include "cyclic binary code",[11] "cyclic progression code",[18][11] "cyclic permuting binary"[19] or "cyclic permuted binary" (CPB).[20][21]The Gray code was sometimes attributed, incorrectly,[12] to Elisha Gray.[22][23][24]Reflected binary codes were applied to mathematical puzzles before they became known to engineers.The binary-reflected Gray code represents the underlying scheme of the classical Chinese rings puzzle, a sequential mechanical puzzle mechanism described by the French Louis Gros in 1872.[25][12]It can serve as a solution guide for the Towers of Hanoi problem, based on a game by the French Édouard Lucas in 1883.[26][27][28][29] Similarly, the so-called Towers of Bucharest and Towers of Klagenfurt game configurations yield ternary and pentary Gray codes.[30]Martin Gardner wrote a popular account of the Gray code in his August 1972 Mathematical Games column in Scientific American.[31]The code also forms a Hamiltonian cycle on a hypercube, where each bit is seen as one dimension.When the French engineer Émile Baudot changed from using a 6-unit (6-bit) code to 5-unit code for his printing telegraph system,  in 1875[32] or 1876,[33][34] he ordered the alphabetic characters on his print wheel using a reflected binary code, and assigned the codes using only three of the bits to vowels.  With vowels and consonants sorted in their alphabetical order,[35][36][37] and other symbols appropriately placed, the 5-bit character code has been recognized as a reflected binary code.[12] This code became known as Baudot code[38] and, with minor changes, was eventually adopted as International Telegraph Alphabet No. 1 (ITA1, CCITT-1) in 1932.[39][40][37]About the same time, the German-Austrian Otto Schäffler[41] demonstrated another printing telegraph in Vienna using a 5-bit reflected binary code for the same purpose, in 1874.[42][12]Frank Gray, who became famous for inventing the signaling method that came to be used for compatible color television, invented a method to convert analog signals to reflected binary code groups using vacuum tube-based apparatus. Filed in 1947, the method and apparatus were granted a patent in 1953,[13] and the name of Gray stuck to the codes. The "PCM tube" apparatus that Gray patented was made by Raymond W. Sears of Bell Labs, working with Gray and William M. Goodall, who credited Gray for the idea of the reflected binary code.[43]Gray was most interested in using the codes to minimize errors in converting analog signals to digital; his codes are still used today for this purpose.Gray codes are used in linear and rotary position encoders (absolute encoders and quadrature encoders) in preference to weighted binary encoding. This avoids the possibility that, when multiple bits change in the binary representation of a position, a misread will result from some of the bits changing before others.For example, some rotary encoders provide a disk which has an electrically conductive Gray code pattern on concentric rings (tracks). Each track has a stationary metal spring contact that provides electrical contact to the conductive code pattern. Together, these contacts produce output signals in the form of a Gray code. Other encoders employ non-contact mechanisms based on optical or magnetic sensors to produce the Gray code output signals.Regardless of the mechanism or precision of a moving encoder, position measurement error can occur at specific positions (at code boundaries) because the code may be changing at the exact moment it is read (sampled). A binary output code could cause significant position measurement errors because it is impossible to make all bits change at exactly the same time. If, at the moment the position is sampled, some bits have changed and others have not, the sampled position will be incorrect. In the case of absolute encoders, the indicated position may be far away from the actual position and, in the case of incremental encoders, this can corrupt position tracking.In contrast, the Gray code used by position encoders ensures that the codes for any two consecutive positions will differ by only one bit and, consequently, only one bit can change at a time. In this case, the maximum position error will be small, indicating a position adjacent to the actual position.Due to the Hamming distance properties of Gray codes, they are sometimes used in genetic algorithms.[14] They are very useful in this field, since mutations in the code allow for mostly incremental changes, but occasionally a single bit-change can cause a big leap and lead to new properties.Gray codes are also used in labelling the axes of Karnaugh maps since 1953[44][45][46] as well as in Händler circle graphs since 1958,[47][48][49][50] both graphical methods for logic circuit minimization.In modern digital communications, Gray codes play an important role in error correction. For example, in a digital modulation scheme such as QAM where data is typically transmitted in symbols of 4 bits or more, the signal's constellation diagram is arranged so that the bit patterns conveyed by adjacent constellation points differ by only one bit. By combining this with forward error correction capable of correcting single-bit errors, it is possible for a receiver to correct any transmission errors that cause a constellation point to deviate into the area of an adjacent point. This makes the transmission system less susceptible to noise.Digital logic designers use Gray codes extensively for passing multi-bit count information between synchronous logic that operates at different clock frequencies. The logic is considered operating in different "clock domains". It is fundamental to the design of large chips that operate with many different clocking frequencies.If a system has to cycle through all possible combinations of on-off states of some set of controls, and the changes of the controls require non-trivial expense (e.g. time, wear, human work), a Gray code minimizes the number of setting changes to just one change for each combination of states. An example would be testing a piping system for all combinations of settings of its manually operated valves.A balanced Gray code can be constructed,[51] that flips every bit equally often. Since bit-flips are evenly distributed, this is optimal in the following way: balanced Gray codes minimize the maximal count of bit-flips for each digit.George R. Stibitz utilized a reflected binary code in a binary pulse counting device in 1941 already.[10][11][12]A typical use of Gray code counters is building a FIFO (first-in, first-out) data buffer that has read and write ports that exist in different clock domains. The input and output counters inside such a dual-port FIFO are often stored using Gray code to prevent invalid transient states from being captured when the count crosses clock domains.[52]The updated read and write pointers need to be passed between clock domains when they change, to be able to track FIFO empty and full status in each domain. Each bit of the pointers is sampled non-deterministically for this clock domain transfer. So for each bit, either the old value or the new value is propagated. Therefore, if more than one bit in the multi-bit pointer is changing at the sampling point, a "wrong" binary value (neither new nor old) can be propagated. By guaranteeing only one bit can be changing, Gray codes guarantee that the only possible sampled values are the new or old multi-bit value. Typically Gray codes of power-of-two length are used.Sometimes digital buses in electronic systems are used to convey quantities that can only increase or decrease by one at a time, for example the output of an event counter which is being passed between clock domains or to a digital-to-analog converter. The advantage of Gray codes in these applications is that differences in the propagation delays of the many wires that represent the bits of the code cannot cause the received value to go through states that are out of the Gray code sequence. This is similar to the advantage of Gray codes in the construction of mechanical encoders, however the source of the Gray code is an electronic counter in this case. The counter itself must count in Gray code, or if the counter runs in binary then the output value from the counter must be reclocked after it has been converted to Gray code, because when a value is converted from binary to Gray code,[nb 1] it is possible that differences in the arrival times of the binary data bits into the binary-to-Gray conversion circuit will mean that the code could go briefly through states that are wildly out of sequence. Adding a clocked register after the circuit that converts the count value to Gray code may introduce a clock cycle of latency, so counting directly in Gray code may be advantageous.[53]To produce the next count value in a Gray-code counter, it is necessary to have some combinational logic that will increment the current count value that is stored. One way to increment a Gray code number is to convert it into ordinary binary code,[54] add one to it with a standard binary adder, and then convert the result back to Gray code.[55] Other methods of counting in Gray code are discussed in a report by Robert W. Doran, including taking the output from the first latches of the master-slave flip flops in a binary ripple counter.[56]Gray code addressingAs the execution of program code typically causes an instruction memory access pattern of locally consecutive addresses, bus encodings using Gray code addressing instead of binary addressing can reduce the number of state changes of the address bits significantly, thereby reducing the CPU power consumption in some low-power designs.[57][58]The binary-reflected Gray code list for n bits can be generated recursively from the list for n − 1 bits by reflecting the list (i.e. listing the entries in reverse order), prefixing the entries in the original list with a binary , prefixing the entries in the reflected list with a binary , and then concatenating the original list with the reversed list.[12]  For example, generating the n = 3 list from the n = 2 list:2-bit list:, , ,  Reflected: , , , Prefix old entries with :, , , , Prefix new entries with : , , , Concatenated:, , , ,, , , The one-bit Gray code is G1 = (). This can be thought of as built recursively as above from a zero-bit Gray code G0 = ( Λ ) consisting of a single entry of zero length. This iterative process of generating Gn+1 from Gn makes the following properties of the standard reflecting code clear:Gn is a permutation of the numbers 0, ..., 2n − 1.  (Each number appears exactly once in the list.)Gn is embedded as the first half of Gn+1.Therefore, the coding is stable, in the sense that once a binary number appears in Gn it appears in the same position in all longer lists; so it makes sense to talk about the reflective Gray code value of a number: G(m) = the mth reflecting Gray code, counting from 0.Each entry in Gn differs by only one bit from the previous entry. (The Hamming distance is 1.)The last entry in Gn differs by only one bit from the first entry. (The code is cyclic.)These characteristics suggest a simple and fast method of translating a binary value into the corresponding Gray code. Each bit is inverted if the next higher bit of the input value is set to one. This can be performed in parallel by a bit-shift and exclusive-or operation if they are available: the nth Gray code is obtained by computing . Prepending a  bit leaves the order of the code words unchanged, prepending a  bit reverses the order of the code words. If the bits at position  of codewords are inverted, the order of neighbouring blocks of  codewords is reversed. For example, if bit 0 is inverted in a 3 bit codeword sequence, the order of two neighbouring codewords is reversed000,001,010,011,100,101,110,111 → 001,000,011,010,101,100,111,110 (invert bit 0)If bit 1 is inverted, blocks of 2 codewords change order:000,001,010,011,100,101,110,111 → 010,011,000,001,110,111,100,101 (invert bit 1)If bit 2 is inverted, blocks of 4 codewords reverse order:000,001,010,011,100,101,110,111 → 100,101,110,111,000,001,010,011 (invert bit 2)Thus, performing an exclusive or on a bit  at position  with the bit  at position  leaves the order of codewords intact if , and reverses the order of blocks of  codewords if . Now, this is exactly the same operation as the reflect-and-prefix method to generate the Gray code.A similar method can be used to perform the reverse translation, but the computation of each bit depends on the computed value of the next higher bit so it cannot be performed in parallel. Assuming  is the th Gray-coded bit ( being the most significant bit), and  is the th binary-coded bit ( being the most-significant bit), the reverse translation can be given recursively: , and . Alternatively, decoding a Gray code into a binary number can be described as a prefix sum of the bits in the Gray code, where each individual summation operation in the prefix sum is performed modulo two.To construct the binary-reflected Gray code iteratively, at step 0 start with the , and at step  find the bit position of the least significant  in the binary representation of  and flip the bit at that position in the previous code  to get the next code . The bit positions start 0, 1, 0, 2, 0, 1, 0, 3, ....[nb 2] See find first set for efficient algorithms to compute these values.The following functions in C convert between binary numbers and their associated Gray codes. While it may seem that Gray-to-binary conversion requires each bit to be handled one at a time, faster algorithms exist.[59][54][nb 1]On newer processors, the number of ALU instructions in the decoding step can be reduced by taking advantage of the CLMUL instruction set. If MASK is the constant binary string of ones ended with a single zero digit, then carryless multiplication of MASK with the grey encoding of x will always give either x or its bitwise negation.In practice, "Gray code" almost always refers to a binary-reflected Gray code (BRGC).However, mathematicians have discovered other kinds of Gray codes.Like BRGCs, each consists of a list of words, where each word differs from the next in only one digit (each word has a Hamming distance of 1 from the next word).It is possible to construct binary Gray codes with n bits with a length of less than , if the length is even. One possibility is to start with a balanced Gray code and remove pairs of values at either the beginning and the end, or in the middle.[60] OEIS sequence A290772 [61] gives the number of possible Gray sequences of length  which include zero and use the minimum number of bits.n-ary Gray codeTernary number → ternary Gray codeThere are many specialized types of Gray codes other than the binary-reflected Gray code. One such type of Gray code is the n-ary Gray code, also known as a non-Boolean Gray code. As the name implies, this type of Gray code uses non-Boolean values in its encodings.For example, a 3-ary (ternary) Gray code would use the values 0,1,2.[30] The (n, k)-Gray code is the n-ary Gray code with k digits.[62]The sequence of elements in the (3, 2)-Gray code is: 00,01,02,12,11,10,20,21,22. The (n, k)-Gray code may be constructed recursively, as the BRGC, or may be constructed iteratively. An algorithm to iteratively generate the (N, k)-Gray code is presented (in C):There are other Gray code algorithms for (n,k)-Gray codes. The (n,k)-Gray code produced by the above algorithm is always cyclical; some algorithms, such as that by Guan,[62] lack this property when k is odd. On the other hand, while only one digit at a time changes with this method, it can change by wrapping (looping from n − 1 to 0). In Guan's algorithm, the count alternately rises and falls, so that the numeric difference between two Gray code digits is always one.Gray codes are not uniquely defined, because a permutation of the columns of such a code is a Gray code too. The above procedure produces a code in which the lower the significance of a digit, the more often it changes, making it similar to normal counting methods.See also Skew binary number system, a variant ternary number system where at most two digits change on each increment, as each increment can be done with at most one digit carry operation.Although the binary reflected Gray code is useful in many scenarios, it is not optimal in certain cases because of a lack of "uniformity".[51] In balanced Gray codes, the number of changes in different coordinate positions are as close as possible. To make this more precise, let G be an R-ary complete Gray cycle having transition sequence ; the transition counts (spectrum) of G are the collection of integers defined byA Gray code is uniform or uniformly balanced if its transition counts are all equal, in which case we have for all k. Clearly, when , such codes exist only if n is a power of 2.[63] If n is not a power of 2, it is possible to construct well-balanced binary codes where the difference between two transition counts is at most 2; so that (combining both cases) every transition count is either  or .[51] Gray codes can also be exponentially balanced if all of their transition counts are adjacent powers of two, and such codes exist for every power of two.[64]For example, a balanced 4-bit Gray code has 16 transitions, which can be evenly distributed among all four positions (four transitions per position), making it uniformly balanced:[51] 1 1 1 1 1  0 0 0 0 0  1  1 1 1  0  1 1 1  0 0 0 1 1 1 1  0  1 1  0 0 0  1  0 0 0 0  1 1 1 1 1whereas a balanced 5-bit Gray code has a total of 32 transitions, which cannot be evenly distributed among the positions. In this example, four positions have six transitions each, and one has eight:[51] 1 1 1 1  0 0 0  1 1 1 1 1  0  1 1 1 1  0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1  0 0 0 0 0 0  1 1 1 1 1  0 0  1  0 0 0  1 1  0 0 0 0 0  1 1  0 0  1 1 1 1 1  0 0 0 0  1 0 0 0 0 0 0  1 1 1 1 1  0 0 0 0 0  1 1 1 1 1 1 1  0 0  0 0 0  1  0 0 0 0 0 0 0 0  1  0 0  1 1 1 1 1We will now show a construction[65] and implementation[66] for well-balanced binary Gray codes which allows us to generate an n-digit balanced Gray code for every n. The main principle is to inductively construct an (n + 2)-digit Gray code  given an n-digit Gray code G in such a way that the balanced property is preserved. To do this, we consider partitions of  into an even number L of non-empty blocks of the formwhere , , and ). This partition induces an -digit Gray code given byIf we define the transition multiplicitiesto be the number of times the digit in position i changes between consecutive blocks in a partition, then for the (n + 2)-digit Gray code induced by this partition the transition spectrum  isThe delicate part of this construction is to find an adequate partitioning of a balanced n-digit Gray code such that the code induced by it remains balanced, but for this only the transition multiplicities matter; joining two consecutive blocks over a digit  transition and splitting another block at another digit  transition produces a different Gray code with exactly the same transition spectrum , so one may for example[64] designate the first  transitions at digit  as those that fall between two blocks. Uniform codes can be found when  and , and this construction can be extended to the R-ary case as well.[65]Long run (or maximum gap) Gray codes maximize the distance between consecutive changes of digits in the same position. That is, the minimum run-length of any bit remains unchanged for as long as possible.[67]Monotonic codes are useful in the theory of interconnection networks, especially for minimizing dilation for linear arrays of processors.[68]If we define the weight of a binary string to be the number of 1s in the string, then although we clearly cannot have a Gray code with strictly increasing weight, we may want to approximate this by having the code run through two adjacent weights before reaching the next one.We can formalize the concept of monotone Gray codes as follows: consider the partition of the hypercube  into levels of vertices that have equal weight, i.e.for . These levels satisfy . Let  be the subgraph of  induced by , and let  be the edges in . A monotonic Gray code is then a Hamiltonian path in  such that whenever  comes before  in the path, then .An elegant construction of monotonic n-digit Gray codes for any n is based on the idea of recursively building subpaths  of length  having edges in .[68] We define ,  whenever  or , andotherwise. Here,  is a suitably defined permutation and  refers to the path P with its coordinates permuted by . These paths give rise to two monotonic n-digit Gray codes  and  given byThe choice of  which ensures that these codes are indeed Gray codes turns out to be . The first few values of  are shown in the table below.Subpaths in the Savage–Winkler algorithmj = 0j = 1j = 2j = 3n = 1n = 2n = 3n = 4These monotonic Gray codes can be efficiently implemented in such a way that each subsequent element can be generated in O(n) time. The algorithm is most easily described using coroutines.Monotonic codes have an interesting connection to the Lovász conjecture, which states that every connected vertex-transitive graph contains a Hamiltonian path. The "middle-level" subgraph  is vertex-transitive (that is, its automorphism group is transitive, so that each vertex has the same "local environment" and cannot be differentiated from the others, since we can relabel the coordinates as well as the binary digits to obtain an automorphism) and the problem of finding a Hamiltonian path in this subgraph is called the "middle-levels problem", which can provide insights into the more general conjecture. The question has been answered affirmatively for , and the preceding construction for monotonic codes ensures a Hamiltonian path of length at least 0.839N where N is the number of vertices in the middle-level subgraph.[69]Another type of Gray code, the Beckett–Gray code, is named for Irish playwright Samuel Beckett, who was interested in symmetry. His play "Quad" features four actors and is divided into sixteen time periods. Each period ends with one of the four actors entering or leaving the stage. The play begins and ends with an empty stage, and Beckett wanted each subset of actors to appear on stage exactly once.[70] Clearly the set of actors currently on stage can be represented by a 4-bit binary Gray code. Beckett, however, placed an additional restriction on the script: he wished the actors to enter and exit so that the actor who had been on stage the longest would always be the one to exit. The actors could then be represented by a first in, first out queue, so that (of the actors onstage) the actor being dequeued is always the one who was enqueued first.[70] Beckett was unable to find a Beckett–Gray code for his play, and indeed, an exhaustive listing of all possible sequences reveals that no such code exists for n = 4. It is known today that such codes do exist for n = 2, 5, 6, 7, and 8, and do not exist for n = 3 or 4. An example of an 8-bit Beckett–Gray code can be found in Donald Knuth's Art of Computer Programming.[12] According to Sawada and Wong, the search space for n = 6 can be explored in 15 hours, and more than 9,500 solutions for the case n = 7 have been found.[71]Snake-in-the-box codesSnake-in-the-box codes, or snakes, are the sequences of nodes of induced paths in an n-dimensional hypercube graph, and coil-in-the-box codes,[72] or coils, are the sequences of nodes of induced cycles in a hypercube. Viewed as Gray codes, these sequences have the property of being able to detect any single-bit coding error. Codes of this type were first described by William H. Kautz in the late 1950s;[4] since then, there has been much research on finding the code with the largest possible number of codewords for a given hypercube dimension.Single-track Gray codeYet another kind of Gray code is the single-track Gray code (STGC) developed by Norman B. Spedding[73][74] and refined by Hiltgen, Paterson and Brandestini in "Single-track Gray codes" (1996).[75][76] The STGC is a cyclical list of P unique binary encodings of length n such that two consecutive words differ in exactly one position, and when the list is examined as a P × n matrix, each column is a cyclic shift of the first column.[77]The name comes from their use with rotary encoders, where a number of tracks are being sensed by contacts, resulting for each in an output of  or . To reduce noise due to different contacts not switching at exactly the same moment in time, one preferably sets up the tracks so that the data output by the contacts are in Gray code. To get high angular accuracy, one needs lots of contacts; in order to achieve at least 1° accuracy, one needs at least 360 distinct positions per revolution, which requires a minimum of 9 bits of data, and thus the same number of contacts.If all contacts are placed at the same angular position, then 9 tracks are needed to get a standard BRGC with at least 1° accuracy. However, if the manufacturer moves a contact to a different angular position (but at the same distance from the center shaft), then the corresponding "ring pattern" needs to be rotated the same angle to give the same output. If the most significant bit (the inner ring in Figure 1) is rotated enough, it exactly matches the next ring out. Since both rings are then identical, the inner ring can be cut out, and the sensor for that ring moved to the remaining, identical ring (but offset at that angle from the other sensor on that ring). Those two sensors on a single ring make a quadrature encoder. That reduces the number of tracks for a "1° resolution" angular encoder to 8 tracks. Reducing the number of tracks still further cannot be done with BRGC.For many years, Torsten Sillke[78] and other mathematicians believed that it was impossible to encode position on a single track such that consecutive positions differed at only a single sensor, except for the 2-sensor, 1-track quadrature encoder. So for applications where 8 tracks were too bulky, people used single-track incremental encoders (quadrature encoders) or 2-track "quadrature encoder + reference notch" encoders.Norman B. Spedding, however, registered a patent in 1994 with several examples showing that it was possible.[73] Although it is not possible to distinguish 2n positions with n sensors on a single track, it is possible to distinguish close to that many.  Etzion and Paterson conjecture that when n is itself a power of 2, n sensors can distinguish at most 2n − 2n positions and that for prime n the limit is 2n − 2 positions.[79] The authors went on to generate a 504-position single track code of length 9 which they believe is optimal. Since this number is larger than 28 = 256, more than 8 sensors are required by any code, although a BRGC could distinguish 512 positions with 9 sensors.An STGC for P = 30 and n = 5 is reproduced here:Single-track Gray code for 30 positionsAngleCodeAngleCodeAngleCodeAngleCodeAngleCode0°72°144°216°288°12°84°156°228°300°24°96°168°240°312°36°108°180°252°324°48°120°192°264°336°60°132°204°276°348°Each column is a cyclic shift of the first column, and from any row to the next row only one bit changes.[80]The single-track nature (like a code chain) is useful in the fabrication of these wheels (compared to BRGC), as only one track is needed, thus reducing their cost and size.The Gray code nature is useful (compared to chain codes, also called De Bruijn sequences), as only one sensor will change at any one time, so the uncertainty during a transition between two discrete states will only be plus or minus one unit of angular measurement the device is capable of resolving.[81]Two-dimensional Gray codes are used in communication to minimize the number of bit errors in quadrature amplitude modulation (QAM) adjacent points in the constellation. In a typical encoding the horizontal and vertical adjacent constellation points differ by a single bit, and diagonal adjacent points differ by 2 bits.[82]Two-dimensional Gray codes also have uses in location identifications schemes, where the code would be applied to area maps such as a Mercator projection of the earth's surface and an appropriate cyclic two-dimensional distance function such as the Mannheim metric be used to calculate the distance between two encoded locations, thereby combining the characteristics of the Hamming distance with the cyclic continuation of a Mercator projection.[83]If a subsection of a specific codevalue is extracted from that value, for example the last 3 bits of a 4-bit gray-code, the resulting code will be an "excess gray code". This code shows the property of counting backwards in those extracted bits if the original value is further increased. Reason for this is that gray-encoded values do not show the behaviour of overflow, known from classic binary encoding, when increasing past the "highest" value.Example: The highest 3-bit gray code, 7, is encoded as (0)100. Adding 1 results in number 8, encoded in gray as 1100. The last 3 bits do not overflow and count backwards if you further increase the original 4 bit code.When working with sensors that output multiple, gray-encoded values in a serial fashion, one should therefore pay attention whether the sensor produces those multiple values encoded in 1 single gray-code or as separate ones, as otherwise the values might appear to be counting backwards when an "overflow" is expected.The bijective mapping { 0 ↔ , 1 ↔ , 2 ↔ , 3  ↔  } establishes an isometry between the metric space over the finite field  with the metric given by the Hamming distance and the metric space over the finite ring  (the usual modular arithmetic) with the metric given by the Lee distance. The mapping is suitably extended to an isometry of the Hamming spaces  and . Its importance lies in establishing a correspondence between various "good" but not necessarily linear codes as Gray-map images in  of ring-linear codes from .[84][85]There are a number of binary codes similar to Gray codes, including:Datex codes aka Giannini codes (1954), as described by Carl P. Spaulding,[8][86][87][88][89][7] use a variant of O'Brien code II. Codes used by Varec (ca. 1954),[90][91][92][93] use a variant of O'Brien code I as well as base-12 and base-16 Gray code variants.Lucal code (1959)[1][2][56] aka modified reflected binary code (MRB)[1][2][nb 3]Gillham code (1961/1962),[87][94][7][95][96] uses a variant of Datex code and O'Brien code II.Leslie and Russell code (1964)[97][9][98][94]Royal Radar Establishment code[94]Hoklas code (1988)[99][100][101]The following binary-coded decimal (BCD) codes are Gray code variants as well:Petherick code (1953),[18][102][103][104][54][100][nb 4] also known as Royal Aircraft Establishment (RAE) code.[105]O'Brien codes I and II (1955)[106][107][108][88][89][100] (An O'Brien type-I code[nb 5] was already described by Frederic A. Foss of IBM[109][110] and used by Varec in 1954. Later, it was also known as Watts code or Watts reflected decimal (WRD) code and is sometimes ambiguously referred to as reflected binary modified Gray code.[111][19][20][112][113][114][115][116][117][nb 1][nb 3] An O'Brien type-II code was already used by Datex in 1954.[nb 4])Excess-3 Gray code (1956)[118] (aka Gray excess-3 code,[88][89][7] Gray 3-excess code, reflex excess-3 code, excess Gray code,[100] Gray excess code, 10-excess-3 Gray code or Gray–Stibitz code), described by Frank P. Turvey Jr. of ITT.[118]Tompkins codes I and II (1956)[3][107][108][88][89][100]Glixon code (1957), sometimes ambiguously also called modified Gray code[119][54][120][121][107][108][88][89][100][nb 3][nb 5]4-bit unit-distance BCD codes[nb 6]NameBit0123456789Weights[nb 7]TracksCompl.Cyclic5sCommentGray BCD40—34 (3[nb 8])No(2, 4, 8, 16)No[107][108]321Paul41—34 (3[nb 8])No2, 10No[122]321Glixon40—34No2, 4, 8, 10(shifted +1)[119][107][108][120][121][nb 5]321Tompkins I40—42No2, 4, 10Yes[3][107][108]321O'Brien I (Watts)40—349[100][101][nb 9]2, 4, 10Yes[106][107][108][nb 5]321Petherick (RAE)41—339[100][101][nb 9]2, 10Yes[18][104][nb 4]321O'Brien II41—339[88][100][101][nb 9]2, 10Yes[106][107][108][nb 4]321Susskind41—439[nb 9]2, 10Yes[5]321Klar40—44 (3[nb 8])9[nb 9]2, 10Yes[123][124]321Tompkins II41—329[nb 10]2, 10Yes[3][107][108]32141—449[100][101][nb 9]2, 10Yes[7][100]321Linear-feedback shift registerDe Bruijn sequenceSteinhaus–Johnson–Trotter algorithm – an algorithm that generates Gray codes for the factorial number systemMinimum distance codeProuhet–Thue–Morse sequence – related to inverse Gray codeRyser formulaHilbert curveRichards, Richard Kohler (1955). Arithmetic Operations in Digital Computers (5 ed.). New York, USA: D. Van Nostrand Co., Inc.Richards, Richard Kohler (1967). Electronic Digital Components and Circuits. D. Van Nostrand Co., Inc. pp. 490, 500–504, 510–511.Black, Paul E. (2004-02-25). "Gray code". NIST.Press, William H.; Teukolsky, Saul A.; Vetterling, William T.; Flannery, Brian P. (2007). "Section 22.3. Gray Codes". Numerical Recipes: The Art of Scientific Computing (3rd ed.). New York, USA: Cambridge University Press. ISBN 978-0-521-88068-8.Savage, Carla Diane (1997). "A Survey of Combinatorial Gray Codes". SIAM Review. Society for Industrial and Applied Mathematics (SIAM). 39 (4): 605–629. Bibcode:1997SIAMR..39..605S. CiteSeerX . doi:10.1137/S0036144595295272. JSTOR 2132693.Wilf, Herbert Saul (1989). "Chapters 1–3". . Society for Industrial and Applied Mathematics (SIAM). ISBN 0-89871-231-9.Dewar, Megan; Stevens, Brett (2012-08-29). Ordering Block Designs – Gray Codes, Universal Cycles and Configuration. CMS Books in Mathematics (1 ed.). New York, USA: Springer Science+Business Media. doi:10.1007/978-1-4614-4325-4. ISBN 978-1-46144324-7. ISSN 1613-5237.Maxfield, Clive "Max" (2012-10-01) [2011-05-28]. "Gray Code Fundamentals". Design How-To. EETimes. Part 1. Archived from the original on 2017-10-30. Part 2 Part 3Warren, Jr., Henry S. (2013). "Chapter 13: Gray Code". Hacker's Delight (2 ed.). Addison Wesley – Pearson Education, Inc. pp. 311–317. ISBN 978-0-321-84268-8. (7 pages)Zinovik, Igor; Kroening, Daniel; Chebiryak, Yury (2008-03-21). "Computing Binary Combinatorial Gray Codes Via Exhaustive Search With SAT Solvers". IEEE Transactions on Information Theory. IEEE. 54 (4): 1819–1823. doi:10.1109/TIT.2008.917695. hdl:. S2CID 2854180. (5 pages)O'Brien, Joseph A. (June 1957). "Unit-Distance Binary-Decimal Code Translators". IRE Transactions on Electronic Computers. EC-6 (2): 122–123. doi:10.1109/TEC.1957.5221585. ISSN 0367-9950. (2 pages)Barr, K. G. (March 1981). "A decimal Gray code – Easily converted for shaft position coding" . Wireless World. Vol. 87, no. 1542. Faculty of Natural Sciences, University of the West Indies. pp. 86–87. Archived  from the original on 2020-07-28."Gray Code" demonstration by Michael Schreiber, Wolfram Demonstrations Project (with Mathematica implementation). 2007.NIST Dictionary of Algorithms and Data Structures: Gray code.Hitch Hiker's Guide to Evolutionary Computation, Q21: What are Gray codes, and why are they used?, including C code to convert between binary and BRGC.Dragos A. Harabor uses Gray codes in a 3D digitizer.Single-track gray codes, binary chain codes (Lancaster 1994), and linear-feedback shift registers are all useful in finding one's absolute position on a single-track rotary encoder (or other position sensor).AMS Column: Gray codesOptical Encoder Wheel GeneratorProtoTalk.net – Understanding Quadrature Encoding – Covers quadrature encoding in more detail with a focus on robotic applications