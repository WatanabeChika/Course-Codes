n_queensThe eight queens puzzle is the problem of placing eight chess queens on an 8×8 chessboard so that no two queens threaten each other; thus, a solution requires that no two queens share the same row, column, or diagonal.  There are 92 solutions.  The problem was first posed in the mid-19th century.  In the modern era, it is often used as an example problem for various computer programming techniques.The eight queens puzzle is a special case of the more general n queens problem of placing n non-attacking queens on an n×n chessboard.  Solutions exist for all natural numbers n with the exception of n = 2 and n = 3.  Although the exact number of solutions is only known for n ≤ 27, the asymptotic growth rate of the number of solutions is (0.143 n)n.Chess composer Max Bezzel published the eight queens puzzle in 1848. Franz Nauck published the first solutions in 1850.[1] Nauck also extended the puzzle to the n queens problem, with n queens on a chessboard of n×n squares.Since then, many mathematicians, including Carl Friedrich Gauss, have worked on both the eight queens puzzle and its generalized n-queens version. In 1874, S. Gunther proposed a method using determinants to find solutions.[1] J.W.L. Glaisher refined Gunther's approach.In 1972, Edsger Dijkstra used this problem to illustrate the power of what he called structured programming. He published a highly detailed description of a depth-first backtracking algorithm.[2]The problem of finding all solutions to the 8-queens problem can be quite computationally expensive, as there are 4,426,165,368 possible arrangements of eight queens on an 8×8 board,[a] but only 92 solutions. It is possible to use shortcuts that reduce computational requirements or rules of thumb that avoids brute-force computational techniques. For example, by applying a simple rule that chooses one queen from each column, it is possible to reduce the number of possibilities to 16,777,216 (that is, 88) possible combinations. Generating permutations further reduces the possibilities to just 40,320 (that is, 8!), which can then be checked for diagonal attacks.The eight queens puzzle has 92 distinct solutions. If solutions that differ only by the symmetry operations of rotation and reflection of the board are counted as one, the puzzle has 12 solutions.  These are called fundamental solutions; representatives of each are shown below.A fundamental solution usually has eight variants (including its original form) obtained by rotating 90, 180, or 270° and then reflecting each of the four rotational variants in a mirror in a fixed position. However, one of the 12 fundamental solutions (solution 12 below) is identical to its own 180° rotation, so has only four variants (itself and its reflection, its 90° rotation and the reflection of that).[b] Such solutions have only two variants (itself and its reflection).  Thus, the total number of distinct solutions is 11×8 + 1×4 = 92.All fundamental solutions are presented below:Solution 10 has the additional property that no three queens are in a straight line.  Solutions 1 and 8 have a 4-queen line.Brute-force algorithms to count the number of solutions are computationally manageable for , but would be intractable for problems of , as 20! = 2.433 × 1018.  If the goal is to find a single solution, one can show solutions exist for all n ≥ 4 with no search whatsoever.[3][4]These solutions exhibit stair-stepped patterns, as in the following examples for n = 8, 9 and 10:The examples above can be obtained with the following formulas.[3] Let (i, j) be the square in column i and row j on the n × n chessboard, k an integer.One approach[3] isIf the remainder from dividing n by 6 is not 2 or 3 then the list is simply all even numbers followed by all odd numbers not greater than n.Otherwise, write separate lists of even and odd numbers (2, 4, 6, 8 – 1, 3, 5, 7).If the remainder is 2, swap 1 and 3 in odd list and move 5 to the end (3, 1, 7, 5).If the remainder is 3, move 2 to the end of even list and 1,3 to the end of odd list (4, 6, 8, 2 – 5, 7, 1, 3).Append odd list to the even list and place queens in the rows given by these numbers, from left to right (a2, b4, c6, d8, e3, f1, g7, h5).For  this results in fundamental solution 1 above. A few more examples follow.14 queens (remainder 2): 2, 4, 6, 8, 10, 12, 14, 3, 1, 7, 9, 11, 13, 5.15 queens (remainder 3): 4, 6, 8, 10, 12, 14, 2, 5, 7, 9, 11, 13, 15, 1, 3.20 queens (remainder 2): 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 3, 1, 7, 9, 11, 13, 15, 17, 19, 5.There is no known formula for the exact number of solutions for placing n queens on an  board i.e. the number of independent sets of size n in an  queen's graph. The 27×27 board is the highest-order board that has been completely enumerated.[5]  The following tables give the number of solutions to the n queens problem, both fundamental (sequence  in the OEIS) and all (sequence  in the OEIS), for all known cases.nfundamentalall11120030041252106147640812929463521092724113412,680121,78714,200139,23373,7121445,752365,59615285,0532,279,184161,846,95514,772,5121711,977,93995,815,1041883,263,591666,090,62419621,012,7544,968,057,848204,878,666,80839,029,188,8842139,333,324,973314,666,222,71222336,376,244,0422,691,008,701,644233,029,242,658,21024,233,937,684,4402428,439,272,956,934227,514,171,973,73625275,986,683,743,4342,207,893,435,808,352262,789,712,466,510,28922,317,699,616,364,0442729,363,495,934,315,694234,907,967,154,122,528In 2021, Michael Simkin proved that for large numbers n, the number of solutions of the n queens problem is approximately .[6]  More precisely, the number  of solutions has asymptotic growthwhere  is a constant that lies between 1.939 and 1.945.[7] (Here o(1) represents little o notation.)If one instead considers a toroidal chessboard (where diagonals "wrap around" from the top edge to the bottom and from the left edge to the right), it is only possible to place n queens on an  board if   In this case, the asymptotic number of solutions is[8][9]Higher dimensionsFind the number of non-attacking queens that can be placed in a d-dimensional chess  of size n.  More than n queens can be placed in some higher dimensions (the smallest example is four non-attacking queens in a 3×3×3 chess space), and it is in fact known that for any k, there are higher dimensions where nk queens do not suffice to attack all spaces.[10][11]Using pieces other than queensOn an 8×8 board one can place 32 knights, or 14 bishops, 16 kings or eight rooks, so that no two pieces attack each other. In the case of knights, an easy solution is to place one on each square of a given color, since they move only to the opposite color. The solution is also easy for rooks and kings. Sixteen kings can be placed on the board by dividing it into 2-by-2 squares and placing the kings at equivalent points on each square.  Placements of n rooks on an n×n board are in direct correspondence with order-n permutation matrices.Chess variationsRelated problems can be asked for chess variations such as shogi. For instance, the n+k dragon kings problem asks to place k shogi pawns and n+k mutually nonattacking dragon kings on an n×n shogi board.[12]Nonstandard boardsPólya studied the n queens problem on a toroidal ("donut-shaped") board and showed that there is a solution on an n×n board if and only if n is not divisible by 2 or 3.[13] In 2009 Pearson and Pearson algorithmically populated three-dimensional boards (n×n×n) with n2 queens, and proposed that multiples of these can yield solutions for a four-dimensional version of the puzzle.[14][]DominationGiven an n×n board, the domination number is the minimum number of queens (or other pieces) needed to attack or occupy every square. For n = 8 the queen's domination number is 5.[15][16]Queens and other piecesVariants include mixing queens with other pieces; for example, placing m queens and m knights on an n×n board so that no piece attacks another[17] or placing queens and pawns so that no two queens attack each other.[18][]Magic squaresIn 1992, Demirörs, Rafraf, and Tanik published a method for converting some magic squares into n-queens solutions, and vice versa.[19]Latin squaresIn an n×n matrix, place each digit 1 through n in n locations in the matrix so that no two instances of the same digit are in the same row or column.Exact coverConsider a matrix with one primary column for each of the n ranks of the board, one primary column for each of the n files, and one secondary column for each of the 4n − 6 nontrivial diagonals of the board.  The matrix has n2 rows: one for each possible queen placement, and each row has a 1 in the columns corresponding to that square's rank, file, and diagonals and a 0 in all the other columns.  Then the n queens problem is equivalent to choosing a subset of the rows of this matrix such that every primary column has a 1 in precisely one of the chosen rows and every secondary column has a 1 in at most one of the chosen rows; this is an example of a generalized exact cover problem, of which sudoku is another example.n-queens completionThe completion problem asks whether, given an n×n chessboard on which some queens are already placed, it is possible to place a queen in every remaining row so that no two queens attack each other.  This and related questions are NP-complete and #P-complete.[20]Any placement of at most n/60 queens can be completed, while there are partial configurations of roughly n/4 queens that cannot be completed.[21]Finding all solutions to the eight queens puzzle is a good example of a simple but nontrivial problem. For this reason, it is often used as an example problem for various programming techniques, including nontraditional approaches such as constraint programming, logic programming or genetic algorithms. Most often, it is used as an example of a problem that can be solved with a recursive algorithm, by phrasing the n queens problem inductively in terms of adding a single queen to any solution to the problem of placing n−1 queens on an n×n chessboard. The induction bottoms out with the solution to the 'problem' of placing 0 queens on the chessboard, which is the empty chessboard.This technique can be used in a way that is much more efficient than the naïve brute-force search algorithm, which considers all 648 = 248 = 281,474,976,710,656 possible blind placements of eight queens, and then filters these to remove all placements that place two queens either on the same square (leaving only 64!/56! = 178,462,987,637,760 possible placements) or in mutually attacking positions. This very poor algorithm will, among other things, produce the same results over and over again in all the different permutations of the assignments of the eight queens, as well as repeating the same computations over and over again for the different sub-sets of each solution. A better brute-force algorithm places a single queen on each row, leading to only 88 = 224 = 16,777,216 blind placements.It is possible to do much better than this.One algorithm solves the eight rooks puzzle by generating the permutations of the numbers 1 through 8 (of which there are 8! = 40,320), and uses the elements of each permutation as indices to place a queen on each row.Then it rejects those boards with diagonal attacking positions.The backtracking depth-first search program, a slight improvement on the permutation method, constructs the search tree by considering one row of the board at a time, eliminating most nonsolution board positions at a very early stage in their construction.Because it rejects rook and diagonal attacks even on incomplete boards, it examines only 15,720 possible queen placements.A further improvement, which examines only 5,508 possible queenplacements, is to combine the permutation based method with the earlypruning method: the permutations are generated depth-first, andthe search space is pruned if the partial permutation produces adiagonal attack.Constraint programming can also be very effective on this problem.An alternative to exhaustive search is an 'iterative repair' algorithm, which typically starts with all queens on the board, for example with one queen per column.[22] It then counts the number of conflicts (attacks), and uses a heuristic to determine how to improve the placement of the queens. The 'minimum-conflicts' heuristic – moving the piece with the largest number of conflicts to the square in the same column where the number of conflicts is smallest – is particularly effective: it easily finds a solution to even the 1,000,000 queens problem.[23][24]Unlike the backtracking search outlined above, iterative repair does not guarantee a solution: like all greedy procedures, it may get stuck on a local optimum.  (In such a case, the algorithm may be restarted with a different initial configuration.) On the other hand, it can solve problem sizes that are several orders of magnitude beyond the scope of a depth-first search.As an alternative to backtracking, solutions can be counted by recursively enumerating valid partial solutions, one row at a time. Rather than constructing entire board positions, blocked diagonals and columns are tracked with bitwise operations. This does not allow the recovery of individual solutions.[25][26]The following program is a translation of Niklaus Wirth's solution into the Python programming language, but does without the index arithmetic found in the original and instead uses lists to keep the program code as simple as possible. By using a coroutine in the form of a generator function, both versions of the original can be unified to compute either one or all of the solutions. Only 15,720 possible queen placements are examined.[27][28]In the game The 7th Guest, the 8th Puzzle: "The Queen's Dilemma" in the game room of the Stauf mansion is the de facto eight queens puzzle.[29]In the game Professor Layton and the Curious Village, the 130th puzzle: "Too Many Queens 5"( ) is an eight queens puzzle.[30]Mathematical gameMathematical puzzleNo-three-in-line problemRook polynomialCostas arrayBell, Jordan; Stevens, Brett (2009). "A survey of known results and research areas for n-queens". Discrete Mathematics. 309 (1): 1–31. doi:.Watkins, John J. (2004). . Princeton: Princeton University Press. ISBN 978-0-691-11503-0.Allison, L.; Yee, C.N.; McGaughey, M. (1988). "Three Dimensional NxN-Queens Problems". Department of Computer Science, Monash University, Australia.Nudelman, S. (1995). "The Modular N-Queens Problem in Higher Dimensions". Discrete Mathematics. 146 (1–3): 159–167. doi:.Engelhardt, M. (August 2010). "Der Stammbaum der Lösungen des Damenproblems (in German, means The pedigree chart of solutions to the 8-queens problem". Spektrum der Wissenschaft: 68–71.On The Modular N-Queen Problem in Higher Dimensions, Ricardo Gomez, Juan Jose Montellano and Ricardo Strausz (2004), Instituto de Matematicas, Area de la Investigacion Cientifica, Circuito Exterior, Ciudad Universitaria, Mexico.Budd, Timothy (2002). "A Case Study: The Eight Queens Puzzle" . An Introduction to Object-Oriented Programming (3rd ed.). Addison Wesley Longman. pp. 125–145. ISBN 0-201-76031-2.Wirth, Niklaus (2004) [updated 2012]. "The Eight Queens Problem". Algorithms and Data Structures . Oberon version with corrections and authorized modifications. pp. 114–118.queens-cpm on GitHub Eight Queens Puzzle in Turbo Pascal for CP/Meight-queens.py on GitHub Eight Queens Puzzle one line solution in PythonSolutions in more than 100 different programming languages (on Rosetta Code)