CaverphoneThe Caverphone within linguistics and computing, is a phonetic matching algorithm[1][2] invented to identify English names with their sounds, originally built to process a custom dataset compound between 1893 and 1938 in southern Dunedin, New Zealand.[3] Started from a similar concept as metaphone, it has been developed to accommodate and process general English since then.[3]The Caverphone was created by David Hood in the Caversham Project at the University of Otago in New Zealand in 2002, revised in 2004. It was created to assist in data matching between late 19th century and early 20th century electoral rolls, where the name only needed to be in a "commonly recognisable form". The algorithm was intended to apply to those names that could not easily be matched between electoral rolls, after the exact matches were removed from the pool of potential matches.  The algorithm is optimised for accents present in the study area (southern part of the city of Dunedin, New Zealand).The rules of the algorithm are applied consecutively to any particular name, as a series of replacements.The algorithm is as follows:Convert to lowercaseRemove anything not A-ZIf the name starts with...cough, replace it by cou2frough, replace it by rou2ftough, replace it by tou2fenough, replace it by enou2fgn, replace it by 2nIf the name ends withmb, replace it by m2Replacecq with 2qci with sice with secy with sytch with 2chc with kq with kx with kv with fdg with 2gtio with siotia with siad with tph with fhb with psh with s2z with sany initial vowel with an Aall other vowels with a 33gh3 with 3kh3gh with 22g with kgroups of the letter s with a Sgroups of the letter t with a Tgroups of the letter p with a Pgroups of the letter k with a Kgroups of the letter f with a Fgroups of the letter m with a Mgroups of the letter n with a Nw3 with W3wy with Wywh3 with Wh3why with Whyw with 2any initial h with an Aall other occurrences of h with a 2r3 with R3ry with Ryr with 2l3 with L3ly with Lyl with 2j with yy3 with Y3y with 2remove all23put six 1 on the endtake the first six characters as the codeStart with a wordConvert to lowercaseRemove anything not in the standard alphabet (typically a-z)[note 1]Remove final eIf the name starts withcough make it cou2frough make it rou2ftough make it tou2fenough make it enou2ftrough make it trou2fgn make it 2nIf the name ends withmb make it m2Replacecq with 2qci with sice with secy with sytch with 2chc with kq with kx with kv with fdg with 2gtio with siotia with siad with tph with fhb with psh with s2z with san initial vowel[note 2] with an Aall other vowels with a 3j with yan initial y3 with Y3an initial y with Ay with 33gh3 with 3kh3gh with 22g with kgroups of the letter s with a Sgroups of the letter t with a Tgroups of the letter p with a Pgroups of the letter k with a Kgroups of the letter f with a Fgroups of the letter m with a Mgroups of the letter n with a Nw3 with W3wh3 with Wh3if the name ends in w replace the final w with 3w with 2an initial h with an Aall other occurrences of h with a 2r3 with R3if the name ends in r replace the final r with 3r with 2l3 with L3if the name ends in l replace the final l with 3l with 2remove all 2sif the name end in 3, replace the final 3 with Aremove all 3sput ten 1s on the endtake the first ten characters as the codeLee -&gt; leelee -&gt; l33l33 -&gt; L33L33 -&gt; LL -&gt; L111111L111111 -&gt; L11111Thompson -&gt; thompsonthompson -&gt; th3mps3nth3mps3n -&gt; th3mpS3nth3mpS3n -&gt; Th3mpS3nTh3mpS3n -&gt; Th3mPS3nTh3mPS3n -&gt; Th3MPS3nTh3MPS3n -&gt; Th3MPS3NTh3MPS3N -&gt; T23MPS3NT23MPS3N -&gt;  TMPSNTMPSN111111 -&gt; TMPSN1Lee -&gt; leelee -&gt; lele -&gt; l3l3 -&gt; L3L3 -&gt; LALA -&gt; LA1111111111LA1111111111 -&gt; LA11111111Thompson -&gt; thompsonthompson -&gt; th3mps3nth3mps3n -&gt; th3mpS3nth3mpS3n -&gt; Th3mpS3nTh3mpS3n -&gt; Th3mPS3nTh3mPS3n -&gt; Th3MPS3nTh3MPS3n -&gt; Th3MPS3NTh3MPS3N -&gt; T23MPS3NT23MPS3N -&gt;  TMPSNTMPSN1111111111 -&gt; TMPSN11111SoundexNew York State Identification and Intelligence SystemMatch rating approachMetaphoneCologne phoneticsCaversham Project - Caversham data set of names and accents in the southern part of Dunedin, New Zealand in 1893-1938.Original (2002) Caverphone algorithmRevised (2004) Caverphone algorithmImplementations:C# Revised ImplementationJava implementation in the Apache Commons Codec projectPHP implementationPython Implementation caverphone algorithm (version 2.0) - AdvaS Advanced Search project