element_uniquenessIn computational complexity theory, the element distinctness problem or element uniqueness problem is the problem of determining whether all the elements of a list are distinct.It is a well studied problem in many different models of computation. The problem may be solved by sorting the list and then checking if there are any consecutive equal elements; it may also be solved in linear expected time by a randomized algorithm that inserts each item into a hash table and compares only those elements that are placed in the same hash table cell.[1]Several lower bounds in computational complexity are proved by reducing the element distinctness problem to the problem in question, i.e., by demonstrating that the solution of the element uniqueness problem may be quickly found after solving the problem in question.The number of comparisons needed to solve the problem of size , in a comparison-based model of computation such as a decision tree or algebraic decision tree, is . Here,  invokes big theta notation, meaning that the problem can be solved in a number of comparisons proportional to  (a linearithmic function) and that all solutions require this many comparisons.[2] In these models of computation, the input numbers may not be used to index the computer's memory (as in the hash table solution) but may only be accessed by computing and comparing simple algebraic functions of their values. For these models, an algorithm based on comparison sort solves the problem within a constant factor of the best possible number of comparisons. The same lower bound applies as well to the expected number of comparisons in the randomized algebraic decision tree model.[3][4]Quantum algorithms can solve this problem faster, in  queries. The optimal algorithm is by Andris Ambainis.[5] Yaoyun Shi first proved a tight lower bound when the size of the range is sufficiently large.[6] Ambainis[7] and Kutin[8] independently (and via different proofs) extended his work to obtain the lower bound for all functions.Elements that occur more than  times in a multiset of size  may be found by a comparison-based algorithm, the Misraâ€“Gries heavy hitters algorithm, in time . The element distinctness problem is a special case of this problem where . This time  is optimal under the decision tree model of computation.[9]Collision problem