metaheuristicIn computer science and mathematical optimization, a metaheuristic is a higher-level procedure or heuristic designed to find, generate, or select a heuristic (partial search algorithm) that may provide a sufficiently good solution to an optimization problem, especially with incomplete or imperfect information or limited computation capacity.[1][2] Metaheuristics sample a subset of solutions which is otherwise too large to be completely enumerated or otherwise explored. Metaheuristics may make relatively few assumptions about the optimization problem being solved and so may be usable for a variety of problems.[3]Compared to optimization algorithms and iterative methods, metaheuristics do not guarantee that a globally optimal solution can be found on some class of problems.[3] Many metaheuristics implement some form of stochastic optimization, so that the solution found is dependent on the set of random variables generated.[2] In combinatorial optimization, by searching over a large set of feasible solutions, metaheuristics can often find good solutions with less computational effort than optimization algorithms, iterative methods, or simple heuristics.[3] As such, they are useful  approaches for optimization problems.[2] Several books and survey papers have been published on the subject.[2][3][4][5][6]Most literature on metaheuristics is experimental in nature, describing empirical results based on computer experiments with the algorithms. But some formal theoretical results are also available, often on convergence and the possibility of finding the global optimum.[3] Many metaheuristic methods have been published with claims of novelty and practical efficacy. While the field also features high-quality research, many of the publications have been of poor quality; flaws include vagueness, lack of conceptual elaboration, poor experiments, and ignorance of previous literature.[7]These are properties that characterize most metaheuristics:[3]Metaheuristics are strategies that guide the search process.The goal is to efficiently explore the search space in order to find near–optimal solutions.Techniques which constitute metaheuristic algorithms range from simple local search procedures to complex learning processes.Metaheuristic algorithms are approximate and usually non-deterministic.Metaheuristics are not problem-specific.There are a wide variety of metaheuristics[2] and a number of properties with respect to which to classify them.[3]One approach is to characterize the type of search strategy.[3] One type of search strategy is an improvement on simple local search algorithms. A well known local search algorithm is the hill climbing method which is used to find local optimums. However, hill climbing does not guarantee finding global optimum solutions.Many metaheuristic ideas were proposed to improve local search heuristic in order to find better solutions. Such metaheuristics include simulated annealing, tabu search, iterated local search, variable neighborhood search, and GRASP.[3] These metaheuristics can both be classified as local search-based or global search metaheuristics.Other global search metaheuristic that are not local search-based are usually population-based metaheuristics. Such metaheuristics include ant colony optimization, evolutionary computation, particle swarm optimization, genetic algorithm, and rider optimization algorithm[9]Another classification dimension is single solution vs population-based searches.[3][6] Single solution approaches focus on modifying and improving a single candidate solution; single solution metaheuristics include simulated annealing, iterated local search, variable neighborhood search, and guided local search.[6] Population-based approaches maintain and improve multiple candidate solutions, often using population characteristics to guide the search; population based metaheuristics include evolutionary computation, genetic algorithms, and particle swarm optimization.[6] Another category of metaheuristics  is Swarm intelligence which is a collective behavior of decentralized, self-organized agents in a population or swarm. Ant colony optimization,[10] particle swarm optimization,[6] social cognitive optimization are examples of this category.A hybrid metaheuristic is one that combines a metaheuristic with other optimization approaches, such as algorithms from mathematical programming, constraint programming, and machine learning. Both components of a hybrid metaheuristic may run concurrently and exchange information to guide the search.On the other hand, Memetic algorithms[11] represent the synergy of evolutionary or any population-based approach with separate individual learning or local improvement procedures for problem search. An example of memetic algorithm is the use of a local search algorithm instead of a basic mutation operator in evolutionary algorithms.A parallel metaheuristic is one that uses the techniques of parallel programming to run multiple metaheuristic searches in parallel; these may range from simple distributed schemes to concurrent search runs that interact to improve the overall solution.A very active area of research is the design of nature-inspired metaheuristics. Many recent metaheuristics, especially evolutionary computation-based algorithms, are inspired by natural systems. Nature acts as a source of concepts, mechanisms and principles for designing of artificial computing systems to deal with complex computational problems. Such metaheuristics include simulated annealing, evolutionary algorithms, ant colony optimization and particle swarm optimization. A large number of more recent metaphor-inspired metaheuristics have started to attract criticism in the research community for hiding their lack of novelty behind an elaborate metaphor.[7]Metaheuristics are used for combinatorial optimization in which an optimal solution is sought over a discrete search-space. An example problem is the travelling salesman problem where the search-space of candidate solutions grows faster than exponentially as the size of the problem increases, which makes an exhaustive search for the optimal solution infeasible. Additionally, multidimensional combinatorial problems, including most design problems in engineering[12][13][14] such as form-finding and behavior-finding, suffer from the curse of dimensionality, which also makes them infeasible for exhaustive search or analytical methods. Metaheuristics are also widely used for jobshop scheduling and job selection problems.[] Popular metaheuristics for combinatorial problems include simulated annealing by Kirkpatrick et al.,[15] genetic algorithms by Holland et al.,[16] scatter search[17] and tabu search[18] by Glover. Literature review on metaheuristic optimization,[19]suggested that it was Fred Glover who coined the word metaheuristics.[20]A MOF can be defined as ‘‘a set of software tools that provide a correct and reusable implementation of a set of metaheuristics, and the basic mechanisms to accelerate the implementation of its partner subordinate heuristics (possibly including solution encodings and technique-specific operators), which are necessary to solve a particular problem instance using techniques provided’’.[21]There are many candidate optimization tools which can be considered as a MOF of varying feature: Comet, EvA2, evolvica, Evolutionary::Algorithm, GAPlayground, jaga, JCLEC, JGAP, jMetal, n-genes, Open Beagle, Opt4j, ParadisEO/EO, Pisa, Watchmaker, FOM, Hypercube, HotFrame, Templar, EasyLocal, iOpt, OptQuest, JDEAL, Optimization Algorithm Toolkit, HeuristicLab, MAFRA, Localizer, GALIB, DREAM, Discropt, MALLBA, MAGMA, Metaheuristics.jl, UOF[21] and OptaPlanner.Many different metaheuristics are in existence and new variants are continually being proposed. Some of the most significant contributions to the field are:1952: Robbins and Monro work on stochastic optimization methods.[22]1954: Barricelli carry out the first simulations of the evolution process and use them on general optimization problems.[23]1963: Rastrigin proposes random search.[24]1965: Matyas proposes random optimization.[25]1965: Nelder and Mead propose a simplex heuristic, which was shown by Powell to converge to non-stationary points on some problems.[26]1965: Ingo Rechenberg discovers the first Evolution Strategies algorithm.[27]1966: Fogel et al. propose evolutionary programming.[28]1970: Hastings proposes the Metropolis–Hastings algorithm.[29]1970: Cavicchio proposes adaptation of control parameters for an optimizer.[30]1970: Kernighan and Lin propose a graph partitioning method, related to variable-depth search and prohibition-based (tabu) search.[31]1975: Holland proposes the genetic algorithm.[16]1977: Glover proposes scatter search.[17]1978: Mercer and Sampson propose a metaplan for tuning an optimizer's parameters by using another optimizer.[32]1980: Smith describes genetic programming.[33]1983: Kirkpatrick et al. propose simulated annealing.[15]1986: Glover proposes tabu search, first mention of the term metaheuristic.[18]1989: Moscato proposes memetic algorithms.[11]1990: Moscato and Fontanari,[34] and Dueck and Scheuer,[35] independently proposed a deterministic update rule for simulated annealing which accelerated the search. This led to the threshold accepting metaheuristic.1992: Dorigo introduces ant colony optimization in his PhD thesis.[10]1995: Wolpert and Macready prove the no free lunch theorems.[36][37][38][39]Stochastic searchMeta-optimizationMatheuristicsHyper-heuristicsSwarm intelligenceGenetic algorithmsGenetic programmingSimulated annealingWorkforce modelingSörensen, Kenneth; Sevaux, Marc; Glover, Fred (2017-01-16). "A History of Metaheuristics" .  In Martí, Rafael; Panos, Pardalos; Resende, Mauricio (eds.). Handbook of Heuristics. Springer. ISBN 978-3-319-07123-7.Ashish Sharma (2022), Nature Inspired Algorithms with Randomized Hypercomputational Perspective. Information Sciences. https://doi.org/10.1016/j.ins.2022.05.020.Fred Glover and Kenneth Sörensen (ed.). "Metaheuristics". Scholarpedia.EU/ME forum for researchers in the field.