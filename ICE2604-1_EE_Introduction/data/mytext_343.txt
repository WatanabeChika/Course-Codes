Eulerian_graphIn graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex. They were first discussed by Leonhard Euler while solving the famous Seven Bridges of Königsberg problem in 1736. The problem can be stated mathematically like this:Given the graph in the image, is it possible to construct a path (or a cycle; i.e., a path starting and ending on the same vertex) that visits each edge exactly once?Euler proved that a necessary condition for the existence of Eulerian circuits is that all vertices in the graph have an even degree, and stated without proof that connected graphs with all vertices of even degree have an Eulerian circuit. The first complete proof of this latter claim was published posthumously in 1873 by Carl Hierholzer.[1] This is known as Euler's Theorem:A connected graph has an Euler cycle if and only if every vertex has even degree.The term Eulerian graph has two common meanings in graph theory. One meaning is a graph with an Eulerian circuit, and the other is a graph with every vertex of even degree. These definitions coincide for connected graphs.[2]For the existence of Eulerian trails it is necessary that zero or two vertices have an odd degree; this means the Königsberg graph is not Eulerian. If there are no vertices of odd degree, all Eulerian trails are circuits. If there are exactly two vertices of odd degree, all Eulerian trails start at one of them and end at the other. A graph that has an Eulerian trail but not an Eulerian circuit is called semi-Eulerian.An Eulerian trail,[3]  or Euler walk, in an undirected graph is a walk that uses each edge exactly once. If such a walk exists, the graph is called traversable or semi-eulerian.[4]An Eulerian cycle,[3] also called an Eulerian circuit or Euler tour, in an undirected graph is a cycle that uses each edge exactly once.  If such a cycle exists, the graph is called Eulerian or unicursal.[5]  The term "Eulerian graph" is also sometimes used in a weaker sense to denote a graph where every vertex has even degree. For finite connected graphs the two definitions are equivalent, while a possibly unconnected graph is Eulerian in the weaker sense if and only if each connected component has an Eulerian cycle.For directed graphs, "path" has to be replaced with directed path and "cycle" with directed cycle.The definition and properties of Eulerian trails, cycles and graphs are valid for multigraphs as well.An Eulerian orientation of an undirected graph G is an assignment of a direction to each edge of G such that, at each vertex v, the indegree of v equals the outdegree of v. Such an orientation exists for any undirected graph in which every vertex has even degree, and may be found by constructing an Euler tour in each connected component of G and then orienting the edges according to the tour.[6] Every Eulerian orientation of a connected graph is a strong orientation, an orientation that makes the resulting directed graph strongly connected.An undirected graph has an Eulerian cycle if and only if every vertex has even degree, and all of its vertices with nonzero degree belong to a single connected component.An undirected graph can be decomposed into edge-disjoint cycles if and only if all of its vertices have even degree. So, a graph has an Eulerian cycle if and only if it can be decomposed into edge-disjoint cycles and its nonzero-degree vertices belong to a single connected component.An undirected graph has an Eulerian trail if and only if exactly zero or two vertices have odd degree, and all of its vertices with nonzero degree belong to a single connected componentA directed graph has an Eulerian cycle if and only if every vertex has equal in degree and out degree, and all of its vertices with nonzero degree belong to a single strongly connected component. Equivalently, a directed graph has an Eulerian cycle if and only if it can be decomposed into edge-disjoint directed cycles and all of its vertices with nonzero degree belong to a single strongly connected component.A directed graph has an Eulerian trail if and only if at most one vertex has  at most one vertex has  every other vertex has equal in-degree and out-degree, and all of its vertices with nonzero degree belong to a single connected component of the underlying undirected graph.[]Fleury's algorithm is an elegant but inefficient algorithm that dates to 1883.[7] Consider a graph known to have all edges in the same component and at most two vertices of odd degree. The algorithm starts at a vertex of odd degree, or, if the graph has none, it starts with an arbitrarily chosen vertex. At each step it chooses the next edge in the path to be one whose deletion would not disconnect the graph, unless there is no such edge, in which case it picks the remaining edge left at the current vertex. It then moves to the other endpoint of that edge and deletes the edge. At the end of the algorithm there are no edges left, and the sequence from which the edges were chosen forms an Eulerian cycle if the graph has no vertices of odd degree, or an Eulerian trail if there are exactly two vertices of odd degree.While the graph traversal in Fleury's algorithm is linear in the number of edges, i.e. , we also need to factor in the complexity of detecting bridges. If we are to re-run Tarjan's linear time bridge-finding algorithm[8] after the removal of every edge,  Fleury's algorithm will have a time complexity of . A dynamic bridge-finding algorithm of Thorup (2000) allows this to be improved to , but this is still significantly slower than alternative algorithms.Hierholzer's 1873 paper provides a different method for finding Euler cycles that is more efficient than Fleury's algorithm:Choose any starting vertex v, and follow a trail of edges from that vertex until returning to v. It is not possible to get stuck at any vertex other than v, because the even degree of all vertices ensures that, when the trail enters another vertex w there must be an unused edge leaving w. The tour formed in this way is a closed tour, but may not cover all the vertices and edges of the initial graph.As long as there exists a vertex u that belongs to the current tour but that has adjacent edges not part of the tour, start another trail from u, following unused edges until returning to u, and join the tour formed in this way to the previous tour.Since we assume the original graph is connected, repeating the previous step will exhaust all edges of the graph.By using a data structure such as a doubly linked list to maintain the set of unused edges incident to each vertex, to maintain the list of vertices on the current tour that have unused edges, and to maintain the tour itself, the individual operations of the algorithm (finding unused edges exiting each vertex, finding a new starting vertex for a tour, and connecting two tours that share a vertex) may be performed in constant time each, so the overall algorithm takes linear time, .[9]This algorithm may also be implemented with a deque. Because it is only possible to get stuck when the deque represents a closed tour, one should rotate the deque by removing edges from the tail and adding them to the head until unstuck, and then continue until all edges are accounted for. This also takes linear time, as the number of rotations performed is never larger than  (intuitively, any "bad" edges are moved to the head, while fresh edges are added to the tail)The number of Eulerian circuits in digraphs can be calculated using the so-called BEST theorem, named after de Bruijn, van Aardenne-Ehrenfest, Smith and Tutte.  The formula states that the number of Eulerian circuits in a digraph is the product of certain degree factorials and the number of rooted arborescences.  The latter can be computed as a determinant, by the matrix tree theorem, giving a polynomial time algorithm.BEST theorem is first stated in this form in a "note added in proof" to the Aardenne-Ehrenfest and de Bruijn paper (1951).  The original proof was bijective and generalized the de Bruijn sequences.  It is a variation on an earlier result by Smith and Tutte (1941).Counting the number of Eulerian circuits on undirected graphs is much more difficult. This problem is known to be #P-complete.[10] In a positive direction, a Markov chain Monte Carlo approach, via the Kotzig transformations (introduced by Anton Kotzig in 1968) is believed to give a sharp approximation for the number of Eulerian circuits in a graph, though as yet there is no proof of this fact (even for graphs of bounded degree).The asymptotic formula for the number of Eulerian circuits in the complete graphs was determined by McKay and Robinson (1995):[11]A similar formula was later obtained by M.I. Isaev (2009) for complete bipartite graphs:[12]Eulerian trails are used in bioinformatics to reconstruct the DNA sequence from its fragments.[13] They are also used in CMOS circuit design to find an optimal logic gate ordering.[14] There are some algorithms for processing trees that rely on an Euler tour of the tree (where each edge is treated as a pair of arcs).[15][16] The de Bruijn sequences can be constructed as Eulerian trails of de Bruijn graphs.[17]In an infinite graph, the corresponding concept to an Eulerian trail or Eulerian cycle is an Eulerian line, a doubly-infinite trail that covers all of the edges of the graph. It is not sufficient for the existence of such a trail that the graph be connected and that all vertex degrees be even; for instance, the infinite Cayley graph shown, with all vertex degrees equal to four, has no Eulerian line. The infinite graphs that contain Eulerian lines were characterized by Erdõs, Grünwald &amp; Weiszfeld (1936). For an infinite graph or multigraph  to have an Eulerian line, it is necessary and sufficient that all of the following conditions be met:[18][19] is connected. has countable sets of vertices and edges. has no vertices of (finite) odd degree.Removing any finite subgraph  from  leaves at most two infinite connected components in the remaining graph, and if  has even degree at each of its vertices then removing  leaves exactly one infinite connected component.Euler stated a necessary condition for a graph to be Eulerian as all vertices must have even degree. Hierholzer proved this is a sufficient condition in a paper published in 1873. This leads to the following necessary and sufficient statement for what a graph must have to be Eulerian: An undirected connected graph is Eulerian if and only if every vertex of G has even degree.[20]The following result was proved by Veblen in 1912: An undirected connected graph is Eulerian if and only if it is the disjoint union of some cycles.[20]Hierholzer developed a linear time algorithm for constructing an Eulerian tour in an undirected graph.It is possible to have a directed graph that has all even degrees but is not Eulerian. This means that even degrees is not a sufficient condition for a digraph to be Eulerian. König proved that a digraph must also have the same number of arcs entering and leaving each vertex to be Eulerian. In other words, the directed graph must be symmetric. A directed and strongly connected graph is Eulerian if and only if every vertex of G is symmetric.[20]Hierholzer's linear time algorithm for constructing an Eulerian tour is also applicable to directed graphs.[20]If a mixed graph has even degrees only, it is not guaranteed to be an Eulerian graph. This means that evenness is a necessary but not sufficient condition for a mixed graph to be Eulerian. If a mixed graph is even and symmetric, it is guaranteed to be symmetric. This means that evenness and being symmetric is a necessary condition for a mixed graph to be Eulerian. This is not a necessary and sufficient condition however, because it is possible to construct a graph that is even and not symmetric that is still Eulerian.[21]Ford and Fulkerson proved in 1962 in their book Flows in Networks a necessary and sufficient condition for a graph to be Eulerian, viz., that every vertex must be even and satisfy the balance condition. For every subset of vertices S, the difference between the number of arcs leaving S and entering S must be less than or equal to the number of edges incident with S. This is the balanced set condition. A mixed and strongly connected graph is Eulerian if and only if G is even and balanced.[21]The process of checking if a mixed graph is Eulerian is harder than checking if an undirected or directed graph is Eulerian because the balanced set condition concerns every possible subset of vertices.Eulerian matroid, an abstract generalization of Eulerian graphsFive room puzzleHandshaking lemma, proven by Euler in his original paper, showing that any undirected connected graph has an even number of odd-degree verticesHamiltonian path – a path that visits each vertex exactly once.Route inspection problem, search for the shortest path that visits all edges, possibly repeating edges if an Eulerian path does not exist.Veblen's theorem, which states that graphs with even vertex degree can be partitioned into edge-disjoint cycles regardless of their connectivityErdõs, Pál; Grünwald, Tibor; Weiszfeld, Endre (1936), "Végtelen gráfok Euler vonalairól" [On Euler lines of infinite graphs] , Mat. Fix. Lapok (in Hungarian), 43: 129–140.  Translated as Erdős, P.; Grünwald, T.; Vázsonyi, E. (1938), "Über Euler-Linien unendlicher Graphen" [On Eulerian lines in infinite graphs] , J. Math. Phys. (in German), 17 (1–4): 59–75, doi:10.1002/sapm193817159.Euler, L., "Solutio problematis ad geometriam situs pertinentis", Comment. Academiae Sci. I. Petropolitanae 8 (1736), 128–140.Hierholzer, Carl (1873), "Ueber die Möglichkeit, einen Linienzug ohne Wiederholung und ohne Unterbrechung zu umfahren", Mathematische Annalen, 6 (1): 30–32, doi:10.1007/BF01442866, S2CID 119885172.Lucas, E., Récréations Mathématiques IV, Paris, 1921.Fleury, "Deux problemes de geometrie de situation", Journal de mathematiques elementaires (1883), 257–261.T. van Aardenne-Ehrenfest and N. G. de Bruijn (1951) "Circuits and trees in oriented linear graphs", Simon Stevin 28: 203–217.Thorup, Mikkel (2000), "Near-optimal fully-dynamic graph connectivity", Proc. 32nd ACM Symposium on Theory of Computing, pp. 343–350, doi:10.1145/335305.335345, S2CID 128282W. T. Tutte and C. A. B. Smith (1941) "On Unicursal Paths in a Network of Degree 4", American Mathematical Monthly 48: 233–237.Discussion of early mentions of Fleury's algorithm.Euler tour at Encyclopedia of Mathematics.