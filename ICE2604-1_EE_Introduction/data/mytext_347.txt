xorExclusive orXORTruth tableLogic gateNormal formsDisjunctiveConjunctiveZhegalkin polynomial0-preservingyes1-preservingnoMonotonenoAffineyesExclusive or or exclusive disjunction is a logical operation that is true if and only if its arguments differ (one is true, the other is false).[1]It is symbolized by the prefix operator J[2] and by the infix operators XOR (/ or /[]), EOR, EXOR, , , , , , and . The negation of XOR is the logical biconditional, which yields true if and only if the two inputs are the same.It gains the name "exclusive or" because the meaning of "or" is ambiguous when both operands are true; the exclusive or operator excludes that case. This is sometimes thought of as "one or the other but not both". This could be written as "A or B, but not, A and B".Since it is associative, it may be considered to be an n-ary operator which is true if and only if an odd number of arguments are true. That is, a XOR b XOR ... may be treated as XOR(a,b,...).The truth table of A XOR B shows that it outputs true whenever the inputs differ:FalseFalseFalseFalseTrueTrueTrueFalseTrueTrueTrueFalseExclusive disjunction essentially means 'either one, but not both nor none'. In other words, the statement is true if and only if one is true and the other is false. For example, if two horses are racing, then one of the two will win the race, but not both of them. The exclusive disjunction , also denoted by    or , can be expressed in terms of the logical conjunction ("logical and", ), the disjunction ("logical or", ), and the negation () as follows:The exclusive disjunction  can also be expressed in the following way:This representation of XOR may be found useful when constructing a circuit or network, because it has only one  operation and small number of  and  operations. A proof of this identity is given below:It is sometimes useful to write  in the following way:or:This equivalence can be established by applying De Morgan's laws twice to the fourth line of the above proof.The exclusive or is also equivalent to the negation of a logical biconditional, by the rules of material implication (a material conditional is equivalent to the disjunction of the negation of its antecedent and its consequence) and material equivalence.In summary, we have, in mathematical and in engineering notation:The spirit of De Morgan's laws can be applied, we have:Although the operators  (conjunction) and  (disjunction) are very useful in logic systems, they fail a more generalizable structure in the following way:The systems  and  are monoids, but neither is a group. This unfortunately prevents the combination of these two systems into larger structures, such as a mathematical ring.However, the system using exclusive or  is an abelian group.  The combination of operators  and  over elements  produce the well-known field .  This field can represent any logic obtainable with the system  and has the added benefit of the arsenal of algebraic analysis tools for fields.More specifically, if one associates  with 0 and  with 1, one can interpret the logical "AND" operation as multiplication on  and the "XOR" operation as addition on :Using this basis to describe a boolean system is referred to as algebraic normal form.Disjunction is often understood exclusively in natural languages. In English, the disjunctive word "or" is often understood exclusively, particularly when used with the particle "either". The English example below would normally be understood in conversation as implying that Mary is not both a singer and a poet.[3][4]1. Mary is a singer or a poet.However, disjunction can also be understood inclusively, even in combination with "either". For instance, the first example below shows that "either" can be felicitously used in combination with an outright statement that both disjuncts are true. The second example shows that the exclusive inference vanishes away under downward entailing contexts. If disjunction were understood as exclusive in this example, it would leave open the possibility that some people ate both rice and beans.[3]2. Mary is either a singer or a poet or both.3. Nobody ate either rice or beans.Examples such as the above have motivated analyses of the exclusivity inference as pragmatic conversational implicatures calculated on the basis of an inclusive semantics. Implicatures are typically cancellable and do not arise in downward entailing contexts if their calculation depends on the Maxim of Quantity. However, some researchers have treated exclusivity as a bona fide semantic entailment and proposed nonclassical logics which would validate it.[3]This behavior of English "or" is also found in other languages. However, many languages have disjunctive constructions which are robustly exclusive such as French soit... soit.[3]The symbol used for exclusive disjunction varies from one field of application to the next, and even depends on the properties being emphasized in a given context of discussion.  In addition to the abbreviation "XOR", any of the following symbols may also be seen:+, a plus sign, which has the advantage that all of the ordinary algebraic properties of mathematical rings and fields can be used without further ado; but the plus sign is also used for inclusive disjunction in some notation systems; note that exclusive disjunction corresponds to addition modulo 2, which has the following addition table, clearly isomorphic to the one above:    000011101110, a modified plus sign; this symbol is also used in mathematics for the direct sum of algebraic structuresJ, as in JpqAn inclusive disjunction symbol () that is modified in some way, such as^, the caret, used in several programming languages, such as C, C++, C#, D, Java, Perl, Ruby, PHP and Python, denoting the bitwise XOR operator; not used outside of programming contexts because it is too easily confused with other uses of the caret such as exponentiation., sometimes written as&gt;&lt;&gt;-&lt;=1, in IEC symbologyCommutativity: yes                      Associativity: yes                                        Distributivity:The exclusive or doesn't distribute over any binary function (not even itself), but logical conjunction distributes over exclusive or.  (Conjunction and exclusive or form the multiplication and addition operations of a field GF(2), and as in any field they obey the distributive law.)Idempotency: no                                              Monotonicity: no                                    Truth-preserving: noWhen all inputs are true, the output is not true.                       Falsehood-preserving: yesWhen all inputs are false, the output is false.                       Walsh spectrum: (2,0,0,−2)Non-linearity: 0The function is linear.If using binary values for true (1) and false (0), then exclusive or works exactly like addition modulo 2.Exclusive disjunction is often used for bitwise operations. Examples:1 XOR 1 = 01 XOR 0 = 10 XOR 1 = 10 XOR 0 = 01110 XOR 1001 = 0111 (this is equivalent to addition without carry)As noted above, since exclusive disjunction is identical to addition modulo 2, the bitwise exclusive disjunction of two n-bit strings is identical to the standard vector of addition in the vector space .In computer science, exclusive disjunction has several uses:It tells whether two bits are unequal.It is an optional bit-flipper (the deciding input chooses whether to invert the data input).It tells whether there is an odd number of 1 bits ( is true if and only if an odd number of the variables are true), which is equal to the parity bit returned by a parity function.In logical circuits, a simple adder can be made with an XOR gate to add the numbers, and a series of AND, OR and NOT gates to create the carry output.On some computer architectures, it is more efficient to store a zero in a register by XOR-ing the register with itself (bits XOR-ed with themselves are always zero) instead of loading and storing the value zero.In simple threshold-activated neural networks, modeling the XOR function requires a second layer because XOR is not a linearly separable function.Exclusive-or is sometimes used as a simple mixing function in cryptography, for example, with one-time pad or Feistel network systems.[]Exclusive-or is also heavily used in block ciphers such as AES (Rijndael) or Serpent and in block cipher implementation (CBC, CFB, OFB or CTR).Similarly, XOR can be used in generating entropy pools for hardware random number generators.  The XOR operation preserves randomness, meaning that a random bit XORed with a non-random bit will result in a random bit.  Multiple sources of potentially random data can be combined using XOR, and the unpredictability of the output is guaranteed to be at least as good as the best individual source.[5]XOR is used in RAID 3–6 for creating parity information.  For example, RAID can "back up" bytes 10011100 and 01101100 from two (or more) hard drives by XORing the just mentioned bytes, resulting in (11110000) and writing it to another drive.  Under this method, if any one of the three hard drives are lost, the lost byte can be re-created by XORing bytes from the remaining drives. For instance,  if the drive containing 01101100 is lost, 10011100 and 11110000 can be XORed to recover the lost byte.[6]XOR is also used to detect an overflow in the result of a signed binary arithmetic operation. If the leftmost retained bit of the result is not the same as the infinite number of digits to the left, then that means overflow occurred. XORing those two bits will give a "1" if there is an overflow.XOR can be used to swap two numeric variables in computers, using the XOR swap algorithm; however this is regarded as more of a curiosity and not encouraged in practice.XOR linked lists leverage XOR properties in order to save space to represent doubly linked list data structures.In computer graphics, XOR-based drawing methods are often used to manage such items as bounding boxes and cursors on systems without alpha channels or overlay planes.It is also called "not left-right arrow" (\nleftrightarrow) in LaTeX-based markdown (). Apart from the ASCII codes, the operator is encoded at    () and    (), both in block mathematical operators.All About XORProofs of XOR properties and applications of XOR, CS103: Mathematical Foundations of Computing, Stanford University